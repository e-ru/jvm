buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

// plugins {
//  id "io.freefair.lombok" version "3.7.5"
// }

// apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'eu.rudisch'
version = '0.0.1-SNAPSHOT'

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '11'
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '11'
	}
}

allOpen {
	annotation('javax.persistence.Entity')
	annotation('javax.persistence.Embeddable')
	annotation('javax.persistence.MappedSuperclass')
}

test {
	useJUnitPlatform()
}

// application {
//	mainClassName = 'eu.rudisch.authorizationadmin.AuthorizationAdminApplication'
// }

dependencies {
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: project.springBootStarterDataJpaVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: project.springBootStarterWebVersion
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2', version: project.springCloudStarterOauth2Version
    
    implementation group: 'org.projectlombok', name: 'lombok', version: project.lombokVersion
    implementation group: 'org.apache.commons', name: 'commons-text', version: project.commonsTextVersion
    
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: project.jaxbApiVersion
    implementation group: 'javax.activation', name: 'activation', version: project.javaxActivationVersion
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: project.jaxbRuntimeVersion
    
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
    
    runtime group: 'mysql', name: 'mysql-connector-java', version: project.mysqlConnectorJavaVersion
    
    testImplementation (group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: project.springBootStarterTestVersion) {
	    exclude group: 'junit', module: 'junit' //by both name and group
	}
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: project.springSecurityTestVersion
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: project.restAssuredVersion
    testImplementation group: 'com.h2database', name: 'h2', version: project.h2Version
    
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: project.junit5Version
}